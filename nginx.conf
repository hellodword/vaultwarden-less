# user www-data;

worker_processes auto;
worker_rlimit_nofile 51200;

# include /etc/nginx/modules-enabled/50-mod-http-headers-more-filter.conf;
# load_module modules/ngx_http_headers_more_filter_module.so;

error_log  /var/log/nginx/error.log warn;
# pid        /tmp/nginx.pid;
pid        /var/run/nginx.pid;

events {
    use epoll;
    worker_connections 4096;
    multi_accept on;
}

http {

    # This disables emitting NGINX version on error pages and in the "Server" response header field:
    server_tokens off;

    # # Hide Nginx server signature
    # more_clear_headers 'Server';

    # Mitigation of CRIME/BREACH attacks

    # Disable dynamic HTTP compression:
    gzip off;

    client_body_buffer_size 16k;      # default: 8k (32-bit) | 16k (64-bit)
    client_header_buffer_size 1k;     # default: 1k
    client_max_body_size 100k;        # default: 1m
    large_client_header_buffers 2 1k; # default: 4 8k

    client_body_timeout 10s;    # default: 60s
    client_header_timeout 10s;  # default: 60s
    keepalive_timeout 5s 5s;    # default: 75s
    send_timeout 10s;           # default: 60s

    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 128;

    limit_req_zone $binary_remote_addr zone=per_ip_5r_s:5m rate=5r/s;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    # keepalive_timeout 65;
    types_hash_max_size 2048;

    # include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log off;
    error_log /var/log/nginx/error.log warn;


    server_names_hash_bucket_size 128;
    # client_header_buffer_size 32k;
    # large_client_header_buffers 4 32k;
    # client_max_body_size 50m;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;

    # gzip on;
    # gzip_min_length 1k;
    # gzip_buffers 4 16k;
    # gzip_http_version 1.1;
    # gzip_comp_level 2;
    # gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;
    # gzip_vary on;
    # gzip_proxied expired no-cache no-store private auth;
    # gzip_disable MSIE [1-6].;

    log_format json-log escape=json '{"status":$status,"request_method":"$request_method","request_uri":"$request_uri"}';

    server {
        listen 8080;
        # listen [::]:8080;

        # https://github.com/trimstray/nginx-admins-handbook/blob/master/doc/RULES.md

        # Protect sensitive resources

        #   - https://github.com/getgrav/grav/issues/1625
        location ~ /(LICENSE\.txt|composer\.lock|composer\.json|nginx\.conf|web\.config|htaccess\.txt|\.htaccess) {
            limit_req zone=per_ip_5r_s;
            rewrite ^(.*)$ http://$host/404 redirect;
            return 302;
        }

        # Deny running scripts inside core system directories:
        #   - https://github.com/getgrav/grav/issues/1625
        location ~* /(system|vendor)/.*\.(txt|xml|md|html|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ {
            limit_req zone=per_ip_5r_s;
            rewrite ^(.*)$ http://$host/404 redirect;
            return 302;
        }

        # Deny running scripts inside user directory:
        #   - https://github.com/getgrav/grav/issues/1625
        location ~* /user/.*\.(txt|md|yaml|yml|php|pl|py|cgi|twig|sh|bat)$ {
            limit_req zone=per_ip_5r_s;
            rewrite ^(.*)$ http://$host/404 redirect;
            return 302;
        }

        # Catch file names and file extensions:
        # Example: /foo/bar/.git and /foo/bar/file.git
        location ~* ^.*(\.(?:git|svn|hg|bak|bckp|save|old|orig|original|test|conf|cfg|dist|in[ci]|log|sql|mdb|sw[op]|htaccess|php#|php~|php_bak|aspx?|tpl|sh|bash|bin|exe|dll|jsp|out|cache|))$ {
            # Use also rate limiting:
            # in server context: limit_req_zone $binary_remote_addr zone=per_ip_5r_s:5m rate=5r/s;
            limit_req zone=per_ip_5r_s;
            rewrite ^(.*)$ http://$host/404 redirect;
            return 302;
        }

        location = /404 {
            return 404;
        }

        location / {

            include /etc/nginx/include/obscurity/*.conf;

            # Hide some standard response headers:
            proxy_hide_header X-Powered-By;
            proxy_hide_header X-AspNetMvc-Version;
            proxy_hide_header X-AspNet-Version;
            proxy_hide_header X-Drupal-Cache;

            # Hide some Amazon S3 specific response headers:
            proxy_hide_header X-Amz-Id-2;
            proxy_hide_header X-Amz-Request-Id;

            # Hide other risky response headers:
            proxy_hide_header X-Runtime;

            # Remove risky request headers (the safest method):
            proxy_set_header X-Original-URL "";
            proxy_set_header X-Rewrite-URL "";
            proxy_set_header X-Forwarded-Server "";
            proxy_set_header X-Forwarded-Host "";
            proxy_set_header X-Host "";

            # Or consider setting the vulnerable headers to a known-safe value:
            # proxy_set_header X-Original-URL $request_uri;
            # proxy_set_header X-Rewrite-URL $original_uri;
            proxy_set_header X-Forwarded-Host $host;

            proxy_redirect off;
            proxy_pass http://vaultwarden:80;
            proxy_http_version 1.1;

            access_log syslog:server=syslog-parser:50333,facility=local7,tag=nginx,severity=info,nohostname json-log;
        }
    }
}
